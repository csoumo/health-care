#      version: 0.2
#      phases:
#        pre_build:
#          commands:
#            - echo Logging into Amazon ECR started on `date`
#            - aws --version
#            - echo installing dependencies
#            - echo Logging into Amazon ECR....
#            - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 101919673100.dkr.ecr.us-east-2.amazonaws.com
#            - echo setting repository URI....
#            - REPOSITORY_URI=101919673100.dkr.ecr.us-east-2.amazonaws.com/react-ui
#            - echo setting image tag....
#            - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
#        build:
#          commands:
#            - echo building and tagging started image on `date`
#            - echo running npm run build
#            - echo building the Docker image...
#            - docker build -t $REPOSITORY_URI:latest .
#            - echo tagging the Docker image...
#            - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
#        post_build:
#          commands:
#            - echo pushing Docker image to Amazon ECR started on `date`
#            - echo pushing to repository...
#            - docker push $REPOSITORY_URI:latest
#            - docker push $REPOSITORY_URI:$IMAGE_TAG
#            - echo setting container name...
#            - DOCKER_CONTAINER_NAME=reactcontainer
#            - echo writing image definitions file...
#            - printf '[{"name":"%s", "imageUri":"%s"}]' DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
#            - echo $DOCKER_CONTAINER_NAME
#            - echo printing imagedefinitions.json
#            - cat imagedefinitions.json
#      artifacts:
#        files:
#          - imagedinitions.json

version: 0.2
phases:
  build:
    commands:
      - npm
      - npm add --dev jest-junit @babel/plugin-proposal-private-property-in-object
      - npm run build
artifacts:
  name: "build-output"
  files:
    - "**/*"
